import { getSession } from 'next-auth/react';
import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import Axios from 'axios';
import NavAdmin from '@/components/NavAdmin';
import MenuAdmin from '@/components/MenuAdmin';
import Head from 'next/head';
import Link from 'next/link';

export default function ReadAppointment() {
  const API_URL = 'http://localhost:3001/api/appointments/'; 

  const [appointment, setAppointment] = useState({
    specialty: '',
    comments: '',
    date: '',
    student: '',
    professional: '',
  });

  const router = useRouter();
  const { pid } = router.query; 

  const [message, setMessage] = useState({ message: '', status: '' });

  useEffect(() => {
    if (pid) {
      const getAppointment = async () => {
        try {
          
          const response = await Axios.get(`${API_URL}${pid}`);
          setMessage({ message: 'Appointment encontrado!', status: 'ok' });

          
          const formattedDate = new Date(response.data.date).toISOString().split('T')[0];

          
          setAppointment({
            ...response.data,
            date: formattedDate,
          });
        } catch (error) {
          console.error('Erro ao buscar appointment:', error);
          setMessage({ message: 'Erro ao buscar appointment!', status: 'error' });
        }
      };

      getAppointment();
    }
  }, [pid]);

  return (
    <>
      <Head>
        <title>APP-BC</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div>
        <NavAdmin />
        <MenuAdmin />
        {message.status === 'error' && (
          <div className="alert alert-danger" role="alert">
            {message.message} <Link href="/admin/appointments">Voltar</Link>
          </div>
        )}
      </div>
      <div className="d-flex justify-content-center p-2">
        <div className="container">
          <div className="row border-bottom">
            <h3>Detalhes do Appointment</h3>
            <form>
              <div className="form-group">
                <label className="form-label" htmlFor="specialty">Especialidade</label>
                <input
                  type="text"
                  id="specialty"
                  name="specialty"
                  className="form-control"
                  value={appointment.specialty || ''}
                  readOnly
                />
              </div>
              <div className="form-group">
                <label className="form-label" htmlFor="comments">Coment√°rios</label>
                <input
                  type="text"
                  id="comments"
                  name="comments"
                  className="form-control"
                  value={appointment.comments || ''}
                  readOnly
                />
              </div>
              <div className="form-group">
                <label className="form-label" htmlFor="date">Data</label>
                <input
                  type="date"
                  id="date"
                  name="date"
                  className="form-control"
                  value={appointment.date || ''}
                  readOnly
                />
              </div>
              <div className="form-group">
                <label className="form-label" htmlFor="student">Estudante</label>
                <input
                  type="text"
                  id="student"
                  name="student"
                  className="form-control"
                  value={appointment.student || ''}
                  readOnly
                />
              </div>
              <div className="form-group">
                <label className="form-label" htmlFor="professional">Profissional</label>
                <input
                  type="text"
                  id="professional"
                  name="professional"
                  className="form-control"
                  value={appointment.professional || ''}
                  readOnly
                />
              </div>
              <div className="form-group p-2">
                <Link className="btn btn-outline-info" href="/admin/appointments">
                  Voltar
                </Link>
              </div>
            </form>
          </div>
        </div>
      </div>
    </>
  );
}


export async function getServerSideProps(context) {
  const session = await getSession({ req: context.req });


  if (!session) {
    return {
      redirect: {
        destination: '/login', 
        permanent: false,
      },
    };
  }


  return {
    props: { session }, 
  };
}