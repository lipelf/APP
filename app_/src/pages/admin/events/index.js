import Axios from 'axios';
import NavAdmin from '@/components/NavAdmin';
import EventsAction from '@/components/EventsAction'; 
import Head from 'next/head';
import { useEffect, useState } from 'react';
import Link from 'next/link';
import MenuAdmin from '@/components/MenuAdmin'; 

export default function Events() { 
  const API_URL = "http://localhost:3001/api/events"; 
  const [events, setEvents] = useState([]); 

  useEffect(() => {
    const getAllEvents = async () => {
      try {
        const response = await Axios.get(API_URL);
        setEvents(response.data); 
      } catch (error) {
        console.error('Erro ao buscar os eventos:', error); 
      }
    };

    getAllEvents();
  }, []);

  const handleEventUpdate = (updatedEvent) => {
    // Atualiza o evento na lista localmente após a edição
    setEvents(prevEvents => prevEvents.map(event =>
      event._id === updatedEvent._id ? updatedEvent : event
    ));
  };

  return (
    <>
      <Head>
        <title>APP-BC</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div>
        <NavAdmin />
        <MenuAdmin />
      </div>

      <div className="d-flex justify-content-center p-2">
        <div className="container">
          <div className="row border-bottom">
            <h3> Lista de Eventos </h3>
            <table className="table table-hover table-dark">
              <thead>
                <tr>
                  <th scope="col">ID</th>
                  <th scope="col">Título</th> 
                  <th scope="col">Descrição</th> 
                  <th scope="col">Ação</th>
                </tr>
              </thead>
              <tbody>
                {events.map(event => ( 
                  <tr key={event._id}>
                    <th scope="row">{event._id}</th>
                    <td>{event.title}</td> 
                    <td>{event.description}</td> 
                    <td>
                      <EventsAction 
                        pid={event._id} 
                        onUpdate={handleEventUpdate}  // Passa a função para atualizar localmente
                      />
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>  
    </>
  );
}
