import NavAdmin from '@/components/NavAdmin';
import MenuAdmin from '@/components/MenuAdmin';
import Head from 'next/head';
import Link from 'next/link';
import { useState } from 'react';
import Axios from 'axios';

export default function CreateEvent() {
  const API_URL = "http://localhost:3001/api/events";

  const [event, setEvent] = useState({
    title: "",
    description: "",
    location: "",
  });

  const [message, setMessage] = useState({ message: "", status: "" });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setEvent({
      ...event,
      [name]: value
    });
  };

  const handleCreateEvent = async () => {
    // Verificar se todos os campos obrigatórios estão preenchidos
    if (!event.title || !event.description || !event.location) {
      setMessage({ message: "Todos os campos são obrigatórios", status: "error" });
      return;
    }

    // Gerar o campo 'date' automaticamente
    const eventWithDateAndStatus = {
      ...event,
      date: new Date().toISOString(), // Definir a data como a data atual
      status: "ativo", // Definindo o status como 'ativo' por padrão
    };

    try {
      const response = await Axios.post(API_URL, eventWithDateAndStatus);
      setMessage({ message: response.data.message, status: "ok" });
    } catch (error) {
      console.error('Erro ao criar o evento:', error.response || error);
      setMessage({ message: "Erro ao criar o evento!", status: "error" });
    }
  };

  return (
    <>
      <Head>
        <title>APP-BC</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <div>
        <NavAdmin />
        <MenuAdmin />
        { 
          message.status === "" ? "" : 
          message.status === "ok" ? <div className='alert alert-success' role='alert'> { message.message } <Link className='alert-link' href='/admin/events'>Voltar</Link></div> : 
          <div className='alert alert-danger' role='alert'> { message.message } <Link className='alert-link' href='/admin/events'>Voltar</Link></div>
        }
      </div>

      <div className="d-flex justify-content-center p-2">
        <div className="container">
          <div className="row border-bottom">
            <h3> Cadastro de Evento </h3>
            <form method="POST">
              <div className="form-group">
                <label className="form-label" htmlFor="title">Título</label>
                <input 
                  type="text" 
                  id="title" 
                  name="title" 
                  className="form-control" 
                  value={event.title} 
                  onChange={handleChange} 
                />
              </div>
              <div className="form-group">
                <label className="form-label" htmlFor="description">Descrição</label>
                <input 
                  type="text" 
                  id="description" 
                  name="description" 
                  className="form-control" 
                  value={event.description} 
                  onChange={handleChange} 
                />
              </div>
              <div className="form-group">
                <label className="form-label" htmlFor="location">Local</label>
                <input 
                  type="text" 
                  id="location" 
                  name="location" 
                  className="form-control" 
                  value={event.location} 
                  onChange={handleChange} 
                />
              </div>
              <div className="form-group p-2">
                <button className="btn btn-outline-success" type="button" onClick={handleCreateEvent}>Salvar</button>
                <Link className="btn btn-outline-info" href="/admin/events">Voltar</Link>
              </div>
            </form>
          </div>
        </div>
      </div>
    </>
  );
}
